#Init AudioFile
begin; #

	int myMEGport = 1;
	output_port MEGport = output_port_manager.get_port(myMEGport);
	int AFport = 2;
	output_port audiofile = output_port_manager.get_port(AFport);
	int triggerPort = 3;
	output_port audioTrigger = output_port_manager.get_port(triggerPort);
	

	###>> Init subject specific vars *****************************
	#Generate unique result file name	
	string thisDate = date_time("yymmdd");	
	string thisTime = date_time("hhnnss");
	string userName = "Tinnitus_piloting" + thisDate + "_" + thisTime;

	#Define subject name
	string enterfname = logfile.subject();

	#Start presentation with default settings
	default.present();
	parameter_window.remove_all();
	
	#string fname = "Continuous.txt"; 
	#string fname = "Tinnitus.txt"; 
	#string fname = "Tinnibration.txt"; 
	string fname = "TinMEG2_cal.txt";
	int numRounds = 20; #ROUNDS
	int numBlocks = 5; #8#CONDITIONS (50 per condition)
	int numTrials = 1; #25; #50#TRIALS (SELECT 25)

	array<string> alltrials[numBlocks][6];
	array<string> origtrials[numBlocks][6];
	input_file myfile = new input_file; 
	myfile.open(fname); 

	#Parse file ******
	int stimFileOffset = 1; 
	loop int r=stimFileOffset until r == (numBlocks+stimFileOffset) begin
		alltrials[r][1] = myfile.get_string();
		alltrials[r][2] = myfile.get_string(); 
		alltrials[r][3] = myfile.get_string();
		alltrials[r][4] = myfile.get_string();
		alltrials[r][5] = myfile.get_string();
		alltrials[r][6] = myfile.get_string();
		r=r+1;
	end;
	myfile.close();
	
	origtrials = alltrials;
	#alltrials.shuffle();

	###>> Trial handler ******************************************************************************************************
	#int myLongSilence = 137; #continuous 
	#int myShortSilence = 73; #chopped 
	
	int myITI = 0; #continuous 
	#int myITI = 500; #chopped 500
	
	int silenceDuration = 2000; #2000 --
	int currBlock = 0;
	int currTrial = 0;
	int currRound = 0;
	string myEar = ""; 
	string myTone = ""; 
	string myModulation = ""; 
	int myMegTTL = 0; 
	int myAudioFileTTL = 0; 
	string myStatus = "daniel";
	int myDMS = clock.time_dms();
	int lastDMS = 0; 
	int myTime = 0;
	int timeCompensation = 8 + 50; #tr_statusText + tr_statusText + loadWait
	int stimDuration = 6000 - timeCompensation; #2000
	###################################################
	int stimJitter = 500;  
	string mySound = "";
	int myGap = 0; 
	int myPulse = 0; 
	
	# repeat all conditions รก 60 seconds for 5 rounds; new shuffled order each time
	loop currRound =1; until currRound > numRounds begin
		alltrials = origtrials; 
		#alltrials.shuffle();
		
		
		# repeat randomized order of all conditions (ear, mod freq, cont/chopped)
		loop currBlock =1; until currBlock > numBlocks begin
			
		#myStatus = "Silence for 2 seconds!";
		#myStatusText.set_caption(myStatus); 
		#myStatusText.redraw();
		#tr_statusText.present();
			
			mySound = (alltrials[currBlock][1]);
			myGap = int(alltrials[currBlock][3]); 
			myPulse = int(alltrials[currBlock][4]); 
			myAudioFileTTL = int(alltrials[currBlock][5]);
			myMegTTL = int(alltrials[currBlock][6]);
			#term.print(myAudioFileTTL);
			#term.print(myMegTTL);
			
			# repeat events until 60 seconds of auditory stimul
			loop currTrial=1; until currTrial > (numTrials) begin
				# timer stuff
				myTime = clock.time_dms() - myDMS - lastDMS;
				lastDMS = clock.time_dms() - myDMS;
				
				# write info on screen
				myStatus = mySound + "\n" + ": Round " + string(currRound) + " : Trial " + string(currBlock) + " : Sample " + string(currTrial)+ " : AFTrig " + string(myAudioFileTTL);
				myStatusText.set_caption(myStatus); 
				myStatusText.redraw();
				term.print(myStatus + "\n");
				tr_statusText.present();
					
				# load and present sstimulus
				audiofile.send_code(myAudioFileTTL,180); #preload sound
				wait_interval(150);
				
				audiofile.send_code(128,10); #trigger sound
				MEGport.send_code(myMegTTL,20);
				
				wait_interval(810);
				if myGap == 1 then; 
					MEGport.send_code((64+myMegTTL-1),50);
				end; 
				wait_interval(170);
				if myPulse == 1 then; 
					MEGport.send_code((128+myMegTTL-1),20);
				end; 
				wait_interval(stimDuration);
				#audiofile.send_code(0,10);
				#audiofile.send_code(myAudioFileTTL,20);
				stimJitter = random(1,500);
				#term.print_line(stimJitter);
				MEGport.send_code(2,stimJitter);
				wait_interval(stimJitter);
				#wait_interval(1000);
				currTrial = currTrial + 1
			end;
			
			currBlock=currBlock+1;
		end;
		#tr_break.present();
	currRound = currRound + 1;
	end;

	tr_endoftest.present();
end;